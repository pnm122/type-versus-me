@use '@/scss/fonts' as *;

.container {
	display: flex;
	flex-direction: column;
	gap: 20px;
}

body:has(.handle--dragging) {
	cursor: ew-resize;
}

.slider {
	--slider-label-offset: 8px;
	--slider-label-height: 1.125rem;
	position: relative;
	// Add enough padding to the top of the slider so that the labels fit within its boundaries
	padding-top: calc(var(--slider-label-offset) + var(--slider-label-height));

	.handle {
		position: absolute;
		transform: translate(-50%, -50%);
		cursor: ew-resize;

		&::before {
			content: '';
			position: absolute;
			z-index: var(--z-below);
			width: 44px;
			height: 44px;
			border-radius: 999px;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			background-color: var(--primary);
			opacity: 0;
		}

		&::after {
			content: '';
			position: absolute;
			z-index: var(--z-base);
			width: 6px;
			height: 6px;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%) rotate(45deg);
			background-color: var(--primary);
		}

		&:focus-visible {
			outline: none;
		}

		// Sometimes the mouse will not be on the handle while dragging, but it should be shown always while dragging
		&:hover::before,
		&:focus-visible::before,
		&--dragging::before {
			opacity: 0.2;
		}

		&--low {
			left: var(--range-low-position);

			.handle__label {
				transform: translate(
					calc(-50% + var(--range-low-label-x-offset)),
					calc(-1 * var(--slider-label-offset))
				);
			}
		}

		&--high {
			left: var(--range-high-position);

			.handle__label {
				transform: translate(
					calc(-50% + var(--range-high-label-x-offset)),
					calc(-1 * var(--slider-label-offset))
				);
			}
		}

		&__label {
			@include font-heading(12);
			position: absolute;
			background-color: var(--heading);
			color: var(--background);
			padding-inline: 4px;
			height: var(--slider-label-height);
			line-height: var(--slider-label-height);
			left: 50%;
			bottom: 100%;
			pointer-events: none;
			user-select: none;
		}
	}

	.line,
	.selected-line {
		height: 2px;
		position: absolute;
		top: 100%;
		transform: translateY(-50%);
	}

	.line {
		z-index: var(--z-min);
		width: 100%;
		background-color: var(--border);
		left: 0;
	}

	.selected-line {
		z-index: var(--z-below);
		left: var(--range-low-position);
		right: calc(100% - var(--range-high-position));
		background-color: var(--primary);
	}
}

.inputs {
	display: grid;
	place-items: center;
	gap: 4px;
	grid-template-columns: minmax(0, 1fr) 16px minmax(0, 1fr);

	&__separator {
		width: 12px;
		height: 2px;
		background-color: var(--border);
	}

	.input-wrapper {
		width: 100%;

		&__input {
			min-width: 0px;
		}
	}
}
